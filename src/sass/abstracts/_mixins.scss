@mixin clearfix() {
  & {
    *zoom: 1;
  }
  &::before,
  &::after {
    content: '';
    display: table;
  }
  &::after {
    clear: both;
  }
}

@mixin vertical-horizontal-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin breakpoint($size) {
  $breakpoint-value: map-get($breakpoints, $size);

  @media screen and (min-width: $breakpoint-value) {
    @content;
  }
}

@mixin breakpoint-less($size) {
  $breakpoint-value: map-get($breakpoints, $size);

  @media screen and (max-width: $breakpoint-value) {
    @content;
  }
}

@mixin gradient($start-color, $end-color, $orientation) {
  background: $start-color;
  @if $orientation == 'vertical' {
    background: -webkit-linear-gradient(top, $start-color, $end-color);
    background: linear-gradient(to bottom, $start-color, $end-color);
  } @else if $orientation == 'horizontal' {
    background: -webkit-linear-gradient(left, $start-color, $end-color);
    background: linear-gradient(to right, $start-color, $end-color);
  } @else {
    background: -webkit-radial-gradient(
      center,
      ellipse cover,
      $start-color,
      $end-color
    );
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}
